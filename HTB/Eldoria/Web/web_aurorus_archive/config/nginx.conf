user nginx;

worker_processes 1;

pcre_jit on;

error_log /var/log/nginx/error.log warn;

include /etc/nginx/modules/*.conf;

include /etc/nginx/conf.d/*.conf;

events {
    worker_connections 1024;
}

http {
    # Basic Settings
    sendfile on;  # Enable efficient file transmission
    tcp_nopush on;  # Optimize for sending files in one piece
    tcp_nodelay on;  # Disable Nagle's algorithm for low-latency
    keepalive_timeout 65;  # Timeout for keep-alive connections
    types_hash_max_size 2048;  # Maximum size of the types hash

    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Compression Settings
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security Headers (Uncomment if needed)
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header X-XSS-Protection "1; mode=block" always;
    # add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # add_header Content-Security-Policy "default-src 'self';" always;
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Proxy Settings Common to All Locations
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSocket Support (if needed)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Timeout Settings
    proxy_connect_timeout 60s;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;

    # Server Block for Your Domain
    server {
        listen 1337;

        # Route /oauth/ to OAuth2 Provider (Stripping /oauth/)
        location /oauth/ {
            proxy_pass http://127.0.0.1:8080/oauth/;  # Trailing slash without /oauth/
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route / (Root) to Frontend Server
        location / {
            proxy_pass http://127.0.0.1:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
